service: control-ec2

provider:
  name: aws
  stage: prod
  runtime: python3.8

plugins:
  - serverless-plugin-log-retention

custom:
  logRetentionInDays: 7

package:
  patterns:
    - handler.py

functions:
  start:
    role: startEc2LambdaRole
    handler: handler.start
    events:
      - schedule:
          rate: 
            # Launch EC2 instance at 9 am Eastern on SAT & SUN
            - cron(0 13 ? * SAT-SUN *)
            # Launch EC2 instance at 5 pm Eastern on MON - FRI
            - cron(0 21 ? * MON-FRI *)
    
  stop:
    role: stopEc2LambdaRole
    handler: handler.stop
    events:
      # Stop EC2 instances at 2:00 am Eastern everyday
      - schedule:
          rate:
            - cron(0 6 * * ? *)

resources:
  Resources:   
    startEc2LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: StartEc2LambdaRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:            
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: StartEc2LambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ec2:StartInstances
                    - ec2:DescribeInstances
                    - ec2:DescribeTags
                  Resource:
                    - '*'

                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'

    stopEc2LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: StopEc2LambdaRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:            
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: StopEc2LambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ec2:StopInstances
                    - ec2:DescribeInstances
                    - ec2:DescribeTags
                  Resource:
                    - '*'

                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
    
configValidationMode: error